{"version":3,"file":"static/js/691.8b52d44c.chunk.js","mappings":"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","sources":["components/FilmList/FilmList.styled.jsx","components/FilmList/FilmList.jsx","pages/Movies/Movies.styled.jsx","pages/Movies/Movies.jsx","services/fetchAPI.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 15px;\n  justify-content: center;\n  text-align: center;\n  margin-bottom: 20px;\n`;\n\nexport const Item = styled.li`\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\n  border-radius: 4px;\n  transition: transform 250ms ease-in-out;\n\n  :hover {\n    transform: translateY(-5px);\n  }\n`;\n\nexport const Img = styled.img`\n  object-fit: cover;\n  width: 180px;\n  height: 270px;\n`;\n\nexport const Text = styled.p`\n  width: 170px;\n  padding-top: 10px;\n  padding-bottom: 10px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: black;\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport { List, Item, Img, Text } from 'components/FilmList/FilmList.styled';\nimport PropTypes from 'prop-types';\n\nconst FilmList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <div>\n      <List>\n        {movies?.map(({ id, title, poster_path }) => {\n          return (\n            <Item key={id}>\n              <Link to={`/movies/${id}`} state={{ from: location }}>\n              <Img src={poster_path\n            ? `https://image.tmdb.org/t/p/w300/${poster_path}`\n            : 'https://fr.web.img6.acsta.net/c_310_420/pictures/210/298/21029875_2013082116404994.jpg'} alt=\"poster of cinema\"/>\n              <Text>{title}</Text>\n              </Link>\n            </Item>\n          );\n        })}\n      </List>\n    </div>\n  );\n}\n\nexport default FilmList;\n\nFilmList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      poster_path: PropTypes.string.isRequired,\n    })\n  ),\n};","import styled from 'styled-components';\n\nexport const SearchForm = styled.form`\n  position: absolute;\n  top: 8px;\n  right: 50%;\n  transform: translate(50%);\n  display: flex;\n  width: 400px;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nexport const FormButton = styled.button`\n  display: inline-block;\n  width: 80px;\n  height: 34px;\n  border-radius: 4px;\n  border-color: lavenderblush;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  transition: transform 250ms ease-in-out;\n\n  &:hover {\n    opacity: 1;\n    border: 0;\n    color: white;\n    background-color: orangered;\n  }\n`;\n\nexport const FormInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  border-radius: 4px;\n  font: inherit;\n  font-size: 14px;\n  border-color: lavenderblush;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  &::placeholder {\n    font: inherit;\n    font-size: 16px;\n  }\n`;\n","import { useState, useEffect, useRef } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport * as API from 'services/fetchAPI';\nimport FilmList from 'components/FilmList/FilmList';\nimport { SearchForm, FormButton, FormInput } from 'pages/Movies/Movies.styled';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState(null);\n  let [searchParams, setSearchParams] = useSearchParams();\n  const inputForm = useRef();\n\n  useEffect(() => {\n    const query = searchParams.get('query');\n    if (query === '') {\n      setMovies([]);\n      return;\n    }\n    if (!query) {\n      setMovies(null);\n      inputForm.current.value = '';\n      return;\n    }\n    if (query) {\n      inputForm.current.value = query;\n      API.getMovies(query).then(setMovies);\n    }\n  }, [searchParams]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setSearchParams({ query: e.target.search.value });\n  };\n\n  return (\n    <>\n      <SearchForm action=\"\" onSubmit={handleSubmit}>\n        <FormInput\n          ref={inputForm}\n          name=\"search\"\n          type=\"text\"\n          autocomplete=\"off\"\n          placeholder=\"Search movies\"\n        />\n        <FormButton type=\"submit\">Search</FormButton>\n      </SearchForm>\n      {movies && <FilmList movies={movies} />}\n      {movies?.length === 0 && (\n        <p style={{ textAlign: 'center' }}>Nothing found</p>\n      )}\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'fa4e2e7bb4f5fd2cf129e2fd6b1960d6';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results.map(({ id, title, poster_path }) => {\n    return {\n      id,\n      title,\n      poster_path,\n    };\n  });\n};\n\nexport const getOneMovie = async value => {\n  const response = await axios.get(`/movie/${value}?api_key=${API_KEY}&language=en-US`);\n  return response.data;\n};\n\nexport const getCast = async value => {\n  const response = await axios.get(\n    `/movie/${value}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast.map(({ name, character, profile_path, id }) => {\n    return {\n      name,\n      character,\n      profile_path,\n      id,\n    };\n  });\n};\n\nexport const getReviews = async value => {\n  const response = await axios.get(\n    `/movie/${value}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results.map(({ author, content, id }) => {\n    return {\n      author,\n      content,\n      id,\n    };\n  });\n};\n\nexport const getMovies = async value => {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${value}&page=1`\n  );\n  return response.data.results.map(({ id, title, poster_path }) => {\n    return {\n      id,\n      title,\n      poster_path,\n    };\n  });\n};"],"names":["List","styled","Item","Img","Text","movies","location","useLocation","map","id","title","poster_path","to","state","from","src","alt","SearchForm","FormButton","FormInput","useState","setMovies","useSearchParams","searchParams","setSearchParams","inputForm","useRef","useEffect","query","get","current","value","API","then","action","onSubmit","e","preventDefault","target","search","ref","name","type","autocomplete","placeholder","FilmList","length","style","textAlign","axios","API_KEY","getTrendingMovies","response","data","results","getOneMovie","getCast","cast","character","profile_path","getReviews","author","content","getMovies"],"sourceRoot":""}