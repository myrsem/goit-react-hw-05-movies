{"version":3,"file":"static/js/772.40321bca.chunk.js","mappings":"mPAEaA,EAAOC,EAAAA,GAAAA,EAAH,2C,SCiBjB,EAhBmB,SAAC,GAAqC,IAAD,IAAlCC,OAAUC,EAAwB,EAAxBA,OAAQC,EAAgB,EAAhBA,QACtC,OACE,2BACE,0CAAgBD,MAChB,SAACH,EAAD,UAAOI,MAGZ,ECRYC,EAAOJ,EAAAA,GAAAA,GAAH,sJAQJD,EAAOC,EAAAA,GAAAA,EAAH,4CCkBjB,EAtBgB,WACd,OAA8BK,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACMC,GAAYC,EAAAA,EAAAA,MAAZD,QAMN,OAJAE,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GAAeH,GAASI,MAAK,SAAAC,GAAC,OAAIN,EAAWM,EAAf,GAC/B,GAAE,CAACL,KAGF,iCACE,SAACJ,EAAD,iBACGE,QADH,IACGA,OADH,EACGA,EAASQ,KAAI,SAAAb,GAAM,OAClB,SAAC,EAAD,CAA4BA,OAAQA,GAAnBA,EAAOc,GADN,MAID,KAAb,OAAPT,QAAO,IAAPA,OAAA,EAAAA,EAASU,UACR,SAAC,EAAD,0DAIP,C","sources":["components/ReviewCard/ReviewCard.slyled.jsx","components/ReviewCard/ReviewCard.jsx","pages/MovieDetails/Reviews/Reviews.styled.jsx","pages/MovieDetails/Reviews/Reviews.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Text = styled.p`\nmargin-top: 10px;\n`;","import { Text } from 'components/ReviewCard/ReviewCard.slyled'\nimport PropTypes from 'prop-types';\n\nconst ReviewCard = ({ review: { author, content } }) => {\n  return (\n    <li>\n      <h3>{`Author: ${author}`}</h3>\n      <Text>{content}</Text>\n    </li>\n  );\n}\n\nReviewCard.propTypes = {\n  review: PropTypes.shape({\n    author: PropTypes.string.isRequired,\n    content: PropTypes.string.isRequired,\n  }),\n};\n\nexport default ReviewCard;","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  margin-left: 20px;\n  margin-top: 10px;\n  margin-bottom: 10px;\n`\nexport const Text = styled.p`\nmargin-left: 20px;\n`","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport * as API from 'services/fetchAPI';\nimport ReviewCard from 'components/ReviewCard/ReviewCard';\nimport { List, Text } from 'pages/MovieDetails/Reviews/Reviews.styled'\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState(null);\n  let { movieId } = useParams();\n\n  useEffect(() => {\n    API.getReviews(movieId).then(r => setReviews(r));\n  }, [movieId]);\n\n  return (\n    <>\n      <List>\n        {reviews?.map(review => (\n          <ReviewCard key={review.id} review={review} />\n        ))}\n      </List>\n      {reviews?.length === 0 && (\n        <Text>We don`t have any reviews for this movies</Text>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;"],"names":["Text","styled","review","author","content","List","useState","reviews","setReviews","movieId","useParams","useEffect","API","then","r","map","id","length"],"sourceRoot":""}