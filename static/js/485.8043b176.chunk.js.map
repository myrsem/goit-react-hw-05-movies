{"version":3,"file":"static/js/485.8043b176.chunk.js","mappings":"sNAEaA,EAAOC,EAAAA,GAAAA,GAAH,uJASJC,EAAOD,EAAAA,GAAAA,GAAH,iOAUJE,EAAMF,EAAAA,GAAAA,IAAH,iFAMHG,EAAOH,EAAAA,GAAAA,EAAH,sJ,SCAjB,EAvBiB,SAAC,GAAgB,IAAdI,EAAa,EAAbA,OACZC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,0BACE,SAACP,EAAD,iBACGK,QADH,IACGA,OADH,EACGA,EAAQG,KAAI,YAAiC,IAA9BC,EAA6B,EAA7BA,GAAIC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,YACzB,OACE,SAACT,EAAD,WACE,UAAC,KAAD,CAAMU,GAAE,kBAAaH,GAAMI,MAAO,CAAEC,KAAMR,GAA1C,WACA,SAACH,EAAD,CAAKY,IAAKJ,EAAW,0CACcA,GACnC,yFAA0FK,IAAI,sBAC9F,SAACZ,EAAD,UAAOM,QALED,EASd,OAIR,C,sHCvBYQ,E,OAAQhB,GAAAA,GAAH,wF,SCkBlB,EAfa,WACX,OAA4CiB,EAAAA,EAAAA,UAAS,MAArD,eAAOC,EAAP,KAAuBC,EAAvB,KAME,OAJFC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,KAAwBC,MAAK,SAAAC,GAAC,OAAIJ,EAAkBI,EAAtB,GAC/B,GAAE,KAGC,6BACE,SAACP,EAAD,6BACCE,IAAkB,SAACM,EAAA,EAAD,CAAUpB,OAAQc,MAG1C,C,8LChBHO,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHC,EAAiB,mCAAG,oGACRF,EAAAA,EAAAA,IAAA,sCAAyCC,IADjC,cACzBE,EADyB,yBAExBA,EAASC,KAAKC,QAAQvB,KAAI,YAC/B,MAAO,CACLC,GAF6D,EAA7BA,GAGhCC,MAH6D,EAAzBA,MAIpCC,YAJ6D,EAAlBA,YAM9C,KAR8B,2CAAH,qDAWjBqB,EAAW,mCAAG,WAAMC,GAAN,uFACFP,EAAAA,EAAAA,IAAA,iBAAoBO,EAApB,oBAAqCN,EAArC,oBADE,cACnBE,EADmB,yBAElBA,EAASC,MAFS,2CAAH,sDAKXI,EAAO,mCAAG,WAAMD,GAAN,uFACEP,EAAAA,EAAAA,IAAA,iBACXO,EADW,4BACcN,EADd,oBADF,cACfE,EADe,yBAIdA,EAASC,KAAKK,KAAK3B,KAAI,YAC5B,MAAO,CACL4B,KAFqE,EAAxCA,KAG7BC,UAHqE,EAAlCA,UAInCC,aAJqE,EAAvBA,aAK9C7B,GALqE,EAATA,GAO/D,KAXoB,2CAAH,sDAcP8B,EAAU,mCAAG,WAAMN,GAAN,uFACDP,EAAAA,EAAAA,IAAA,iBACXO,EADW,4BACcN,EADd,2BADC,cAClBE,EADkB,yBAIjBA,EAASC,KAAKC,QAAQvB,KAAI,YAC/B,MAAO,CACLgC,OAF0D,EAA1BA,OAGhCC,QAH0D,EAAlBA,QAIxChC,GAJ0D,EAATA,GAMpD,KAVuB,2CAAH,sDAaViC,EAAS,mCAAG,WAAMT,GAAN,uFACAP,EAAAA,EAAAA,IAAA,gCACIC,EADJ,kBACqBM,EADrB,YADA,cACjBJ,EADiB,yBAIhBA,EAASC,KAAKC,QAAQvB,KAAI,YAC/B,MAAO,CACLC,GAF6D,EAA7BA,GAGhCC,MAH6D,EAAzBA,MAIpCC,YAJ6D,EAAlBA,YAM9C,KAVsB,2CAAH,qD","sources":["components/FilmList/FilmList.styled.jsx","components/FilmList/FilmList.jsx","pages/Home/Home.styled.jsx","pages/Home/Home.jsx","services/fetchAPI.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 15px;\n  justify-content: center;\n  text-align: center;\n  margin-bottom: 20px;\n`;\n\nexport const Item = styled.li`\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\n  border-radius: 4px;\n  transition: transform 250ms ease-in-out;\n\n  :hover {\n    transform: translateY(-5px);\n  }\n`;\n\nexport const Img = styled.img`\n  object-fit: cover;\n  width: 180px;\n  height: 270px;\n`;\n\nexport const Text = styled.p`\n  width: 170px;\n  padding-top: 10px;\n  padding-bottom: 10px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: black;\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport { List, Item, Img, Text } from 'components/FilmList/FilmList.styled';\nimport PropTypes from 'prop-types';\n\nconst FilmList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <div>\n      <List>\n        {movies?.map(({ id, title, poster_path }) => {\n          return (\n            <Item key={id}>\n              <Link to={`/movies/${id}`} state={{ from: location }}>\n              <Img src={poster_path\n            ? `https://image.tmdb.org/t/p/w300/${poster_path}`\n            : 'https://fr.web.img6.acsta.net/c_310_420/pictures/210/298/21029875_2013082116404994.jpg'} alt=\"poster of cinema\"/>\n              <Text>{title}</Text>\n              </Link>\n            </Item>\n          );\n        })}\n      </List>\n    </div>\n  );\n}\n\nexport default FilmList;\n\nFilmList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      poster_path: PropTypes.string.isRequired,\n    })\n  ),\n};","import styled from 'styled-components';\n\nexport const Title = styled.h2`\ntext-align: center;\n margin-top: 30px;\n margin-bottom: 15px;\n`;","import { useEffect, useState } from 'react';\nimport * as API from 'services/fetchAPI';\nimport FilmList from 'components/FilmList/FilmList';\nimport { Title } from 'pages/Home/Home.styled'\n\nconst Home = () => {\n  const [trendingMovies, setTrendingMovies] = useState(null);\n\n  useEffect(() => {\n    API.getTrendingMovies().then(r => setTrendingMovies(r));\n  }, []);\n\n    return (\n      <main>\n        <Title>Trending today</Title>\n        {trendingMovies && <FilmList movies={trendingMovies} />}\n      </main>\n    );\n  };\n\nexport default Home","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'fa4e2e7bb4f5fd2cf129e2fd6b1960d6';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results.map(({ id, title, poster_path }) => {\n    return {\n      id,\n      title,\n      poster_path,\n    };\n  });\n};\n\nexport const getOneMovie = async value => {\n  const response = await axios.get(`/movie/${value}?api_key=${API_KEY}&language=en-US`);\n  return response.data;\n};\n\nexport const getCast = async value => {\n  const response = await axios.get(\n    `/movie/${value}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast.map(({ name, character, profile_path, id }) => {\n    return {\n      name,\n      character,\n      profile_path,\n      id,\n    };\n  });\n};\n\nexport const getReviews = async value => {\n  const response = await axios.get(\n    `/movie/${value}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results.map(({ author, content, id }) => {\n    return {\n      author,\n      content,\n      id,\n    };\n  });\n};\n\nexport const getMovies = async value => {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${value}&page=1`\n  );\n  return response.data.results.map(({ id, title, poster_path }) => {\n    return {\n      id,\n      title,\n      poster_path,\n    };\n  });\n};"],"names":["List","styled","Item","Img","Text","movies","location","useLocation","map","id","title","poster_path","to","state","from","src","alt","Title","useState","trendingMovies","setTrendingMovies","useEffect","API","then","r","FilmList","axios","API_KEY","getTrendingMovies","response","data","results","getOneMovie","value","getCast","cast","name","character","profile_path","getReviews","author","content","getMovies"],"sourceRoot":""}