{"version":3,"file":"static/js/257.8beee790.chunk.js","mappings":"+QAIaA,EAAYC,EAAAA,GAAAA,IAAH,4HAOTC,EAASD,EAAAA,GAAAA,OAAH,kaAqBNE,GAAcF,EAAAA,EAAAA,IAAOG,EAAAA,IAAPH,CAAH,8CAIXI,EAAOJ,EAAAA,GAAAA,GAAH,yGAOJK,EAAOL,EAAAA,GAAAA,GAAH,sBAEJM,EAAON,EAAAA,GAAAA,EAAH,6CAIJO,EAAcP,EAAAA,GAAAA,IAAH,8KASXQ,GAAQR,EAAAA,EAAAA,IAAOS,EAAAA,GAAPT,CAAH,6C,SCpCZU,GAAOC,EAAAA,EAAAA,OAAK,kBAAM,4BAAN,IACZC,GAAUD,EAAAA,EAAAA,OAAK,kBAAM,4BAAN,IAqErB,EAnEqB,WAAO,IAAD,EACzB,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA4CF,EAAAA,EAAAA,UAAS,MAArD,eAAOG,EAAP,KAAuBC,EAAvB,KACMC,GAAYC,EAAAA,EAAAA,MAAZD,QACAE,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAYjB,OAVAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GAAgBP,GAASQ,KAAKX,EAC/B,GAAE,CAACG,KAEJM,EAAAA,EAAAA,YAAU,WAAO,IAAD,EACd,OAAIF,QAAJ,IAAIA,GAAJ,UAAIA,EAAUK,aAAd,OAAI,EAAiBC,MACnBX,EAAkBK,EAASK,MAAMC,KAEpC,GAAE,QAACN,QAAD,IAACA,GAAD,UAACA,EAAUK,aAAX,aAAC,EAAiBC,OAGnBd,IACE,iCACE,UAACb,EAAD,CACE4B,KAAK,SACLC,QAAS,WACPV,EAASJ,GAAkB,IAC5B,EAJH,WAME,2BACE,SAACd,EAAD,MAPJ,cAWA,UAACH,EAAD,YACE,gBACEgC,IAAG,yDAAoDjB,EAAMkB,aAC7DC,IAAI,MAEN,UAAC7B,EAAD,YACE,UAACC,EAAD,YACE,kCAAQS,EAAMoB,MAAd,aAAwBpB,EAAMqB,aAAaC,MAAM,EAAG,GAApD,QACA,UAAC9B,EAAD,iCAAsB+B,KAAKC,MAAuC,IAAjCC,WAAWzB,EAAM0B,eAAuB,GAAzE,gBAEF,UAACnC,EAAD,YACE,sCACA,SAACC,EAAD,UAAOQ,EAAM2B,eAEf,UAACpC,EAAD,YACE,oCACA,SAACC,EAAD,UAAOQ,EAAM4B,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,kBAIxD,UAACvC,EAAD,YACE,oDACA,SAACC,EAAD,CAAOuC,GAAG,OAAV,mBACA,SAACvC,EAAD,CAAOuC,GAAG,UAAV,yBAEF,SAAC,EAAAC,SAAD,CAAUC,UAAU,cAAGC,MAAO,CAACC,UAAW,UAAtB,wBAApB,UACE,UAAC,KAAD,YACE,SAAC,KAAD,CAAOC,KAAK,OAAOC,SAAS,SAAC3C,EAAD,OAC5B,SAAC,KAAD,CAAO0C,KAAK,UAAUC,SAAS,SAACzC,EAAD,aAM1C,C,8LCxFD0C,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHC,EAAiB,mCAAG,oGACRF,EAAAA,EAAAA,IAAA,sCAAyCC,IADjC,cACzBE,EADyB,yBAExBA,EAASC,KAAKC,QAAQhB,KAAI,YAC/B,MAAO,CACLiB,GAF6D,EAA7BA,GAGhC1B,MAH6D,EAAzBA,MAIpCF,YAJ6D,EAAlBA,YAM9C,KAR8B,2CAAH,qDAWjB6B,EAAW,mCAAG,WAAMC,GAAN,uFACFR,EAAAA,EAAAA,IAAA,iBAAoBQ,EAApB,oBAAqCP,EAArC,oBADE,cACnBE,EADmB,yBAElBA,EAASC,MAFS,2CAAH,sDAKXK,EAAO,mCAAG,WAAMD,GAAN,uFACER,EAAAA,EAAAA,IAAA,iBACXQ,EADW,4BACcP,EADd,oBADF,cACfE,EADe,yBAIdA,EAASC,KAAKM,KAAKrB,KAAI,YAC5B,MAAO,CACLE,KAFqE,EAAxCA,KAG7BoB,UAHqE,EAAlCA,UAInCC,aAJqE,EAAvBA,aAK9CN,GALqE,EAATA,GAO/D,KAXoB,2CAAH,sDAcPO,EAAU,mCAAG,WAAML,GAAN,uFACDR,EAAAA,EAAAA,IAAA,iBACXQ,EADW,4BACcP,EADd,2BADC,cAClBE,EADkB,yBAIjBA,EAASC,KAAKC,QAAQhB,KAAI,YAC/B,MAAO,CACLyB,OAF0D,EAA1BA,OAGhCC,QAH0D,EAAlBA,QAIxCT,GAJ0D,EAATA,GAMpD,KAVuB,2CAAH,sDAaVU,EAAS,mCAAG,WAAMR,GAAN,uFACAR,EAAAA,EAAAA,IAAA,gCACIC,EADJ,kBACqBO,EADrB,YADA,cACjBL,EADiB,yBAIhBA,EAASC,KAAKC,QAAQhB,KAAI,YAC/B,MAAO,CACLiB,GAF6D,EAA7BA,GAGhC1B,MAH6D,EAAzBA,MAIpCF,YAJ6D,EAAlBA,YAM9C,KAVsB,2CAAH,qD","sources":["pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx","services/fetchAPI.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport { BiArrowBack } from 'react-icons/bi';\n\nexport const Container = styled.div`\n  display: flex;\n  padding-top: 10px;\n  padding-bottom: 10px;\n  border-bottom: 1px solid black;\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  width: 90px;\n  height: 34px;\n  border-color: lavenderblush;\n  border-radius: 4px;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  transition: transform 250ms ease-in-out;\n\n  &:hover {\n    opacity: 1;\n    border: 0;\n    color: white;\n    background-color: orangered;\n  }\n`;\n\nexport const ButtonLabel = styled(BiArrowBack)`\n  margin-right: 5px;\n`;\n\nexport const List = styled.ul`\n  margin-left: 20px;\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n`;\n\nexport const Item = styled.li``;\n\nexport const Text = styled.p`\n  margin-top: 20px;\n`;\n\nexport const LinkWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding-left: 20px;\n  padding-top: 10px;\n  padding-bottom: 10px;\n  border-bottom: 1px solid black;\n`;\n\nexport const Links = styled(Link)`\n  margin-top: 10px;\n`;\n","import { useState, useEffect, Suspense, lazy } from 'react';\nimport {\n  Routes,\n  Route,\n  useParams,\n  useNavigate,\n  useLocation,\n} from 'react-router-dom';\n\nimport * as API from 'services/fetchAPI';\n\nimport {\n  Container,\n  Button,\n  ButtonLabel,\n  List,\n  Item,\n  Text,\n  LinkWrapper,\n  Links,\n} from 'pages/MovieDetails/MovieDetails.styled';\n\nconst Cast = lazy(() => import('pages/MovieDetails/Cast/Cast'));\nconst Reviews = lazy(() => import('pages/MovieDetails/Reviews/Reviews'));\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const [buttonLocation, setButtonLocation] = useState(null);\n  let { movieId } = useParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  useEffect(() => {\n    API.getOneMovie(movieId).then(setMovie);\n  }, [movieId]);\n\n  useEffect(() => {\n    if (location?.state?.from) {\n      setButtonLocation(location.state.from);\n    }\n  }, [location?.state?.from]);\n\n  return (\n    movie && (\n      <>\n        <Button\n          type=\"button\"\n          onClick={() => { \n            navigate(buttonLocation || '/');\n          }}\n        >\n          <span>\n            <ButtonLabel />\n          </span>\n          Go back\n        </Button>\n        <Container>\n          <img\n            src={`https://image.tmdb.org/t/p/w300_and_h450_bestv2${movie.poster_path}`}\n            alt=\"\"\n          />\n          <List>\n            <Item>\n              <h2>{`${movie.title} (${movie.release_date.slice(0, 4)})`}</h2>\n              <Text>{`User Score: ${Math.round(parseFloat(movie.vote_average) * 100) / 10}%`} </Text>\n            </Item>\n            <Item>\n              <h3>Overview</h3>\n              <Text>{movie.overview}</Text>\n            </Item>\n            <Item>\n              <h3>Genres</h3>\n              <Text>{movie.genres.map(genre => genre.name).join(', ')}</Text>\n            </Item>\n          </List>\n        </Container>\n        <LinkWrapper>\n          <h3>Additional information</h3>\n          <Links to=\"cast\">Cast</Links>\n          <Links to=\"reviews\">Reviews</Links>\n        </LinkWrapper>\n        <Suspense fallback={<p style={{textAlign: 'center'}}>Loading...</p>}>\n          <Routes>\n            <Route path=\"cast\" element={<Cast />} />\n            <Route path=\"reviews\" element={<Reviews />} />\n          </Routes>\n        </Suspense>\n      </>\n    )\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'fa4e2e7bb4f5fd2cf129e2fd6b1960d6';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results.map(({ id, title, poster_path }) => {\n    return {\n      id,\n      title,\n      poster_path,\n    };\n  });\n};\n\nexport const getOneMovie = async value => {\n  const response = await axios.get(`/movie/${value}?api_key=${API_KEY}&language=en-US`);\n  return response.data;\n};\n\nexport const getCast = async value => {\n  const response = await axios.get(\n    `/movie/${value}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast.map(({ name, character, profile_path, id }) => {\n    return {\n      name,\n      character,\n      profile_path,\n      id,\n    };\n  });\n};\n\nexport const getReviews = async value => {\n  const response = await axios.get(\n    `/movie/${value}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results.map(({ author, content, id }) => {\n    return {\n      author,\n      content,\n      id,\n    };\n  });\n};\n\nexport const getMovies = async value => {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${value}&page=1`\n  );\n  return response.data.results.map(({ id, title, poster_path }) => {\n    return {\n      id,\n      title,\n      poster_path,\n    };\n  });\n};"],"names":["Container","styled","Button","ButtonLabel","BiArrowBack","List","Item","Text","LinkWrapper","Links","Link","Cast","lazy","Reviews","useState","movie","setMovie","buttonLocation","setButtonLocation","movieId","useParams","navigate","useNavigate","location","useLocation","useEffect","API","then","state","from","type","onClick","src","poster_path","alt","title","release_date","slice","Math","round","parseFloat","vote_average","overview","genres","map","genre","name","join","to","Suspense","fallback","style","textAlign","path","element","axios","API_KEY","getTrendingMovies","response","data","results","id","getOneMovie","value","getCast","cast","character","profile_path","getReviews","author","content","getMovies"],"sourceRoot":""}